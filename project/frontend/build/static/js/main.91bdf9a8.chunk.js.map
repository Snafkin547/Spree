{"version":3,"sources":["components/Products.js","components/ProductList.js","pages/MainPage.js","pages/Cart.js","components/Cart.js","Utils/ApiUtil.js","Utils/HttpUtil.js","components/Search.js","components/TheAccount.js","components/Header.js","pages/Search.js","pages/Checkout.js","App.js","reportWebVitals.js","index.js"],"names":["ProductInformation","className","class","src","this","props","image","alt","name","price","href","Component","Products","productInformationComponent","map","productInformationObject","ProductList","MainPage","ShopRow","type","value","count","onChange","handleCountChange","totalPrice","checked","isChecked","handleCheck","TotalBlock","cartList","Cart","handleTotalPrice","state","forEach","item","console","log","handleCheckAll","setState","isCheckedAll","event","index","target","checkedCache","Array","push","every","handleHaveCheck","haveChecked","some","handleRemove","filter","ele","alert","handleBuy","id","e","onClick","to","ApiUtil","URL_IP","API_SEARCH","URL_ROOT","API_REGISTER","API_CHECKMAILBOX","API_LOGIN","HttpUtil","url","data","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","json","result","catch","error","SearchBar","keyPress","nativeEvent","keyCode","search","inputValue","searchValue","inputChange","bind","post","res","message","searchResult","onKeyPress","TheAccount","useState","showLoginSign","setShowLoginSign","showLogin","setShowLogin","showSign","setShowSign","isLogin","setIsLogin","closeModal","useEffect","window","localStorage","getItem","clear","Login","Sign","mailBoxPrompt","setMailBoxPrompt","passwordPrompt","setPasswordPrompt","mailBox","setMailbox","password","setPassword","a","setItem","align","htmlFor","onBlur","handleMailBoxBlur","length","handlePasswordBlur","handleLoginIn","repeatPassword","setRepeatPassword","username","setUsername","firstname","setFirstname","lastname","setLastname","usernamePrompt","setUsernamePrompt","firstnamePrompt","setFirstnamePrompt","lastnamePrompt","setLastnamePrompt","repeatPasswordPrompt","setRepeatPasswordPrompt","flag","required","handleUsernameBlur","handleFirstnameBlur","handleLastnameBlur","handleRepeatPasswordBlur","handleSign","Header","role","Search","CheckoutForm","setMyState","inputs","setInputs","setValidated","handleChange","values","handleSubmit","currentTarget","checkValidity","preventDefault","stopPropagation","onSubmit","placeholder","nameShipping","address1","address2","city","zip","email","nameCard","minLength","maxLength","ccNumber","secCode","billingZip","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91bdf9a8.chunk.js","sourcesContent":["import { Component, React, useEffect, useState } from 'react';\nimport './Products.css';  // style sheet for this part of the UI\n\n\n// this class describes how we render the product information cards\n// prop the data you pass to your react component so it knows what values to put in certain fields, instead of hard coding it will be dynamic\nclass ProductInformation extends Component {    \n    render() {\n        return (\n            <li className='product_card'>\n                <div>\n                <img class=\"item__image\" src={ this.props.image } alt=\"Image\" />\n                </div>\n                <div>\n                    <span className=\"item__name\"> { this.props.name } </span>\n                </div>        \n                <div>\n                    <span className=\"item__price\"> { this.props.price } </span>\n                </div> \n                <div>\n                <span className=\"add_to_cart\"> <a href=\"#/cart\">Add to Cart</a> </span>\n                </div>\n            </li>\n        )\n    }\n\n}\n\n\nclass Products extends Component {\n    // render() ask components to describe what they want their section of the UI to look like based on the current combination of props and state\n    render() {\n\n        // product proprierties \n        const products = {\n            \"productInformation\": [\n                {\n                    \"image\": \"img/iphone13.png\",\n                    \"name\": \"iPhone 13 Pro\",\n                    \"price\": 1200,\n                },\n                {\n                    \"image\": \"img/CGG_Samsun_galaxys21_phantom.jpg\",\n                    \"name\": \"Samsung Galaxy S21\",\n                    \"price\": 900,\n                }\n            ]\n\n        }\n\n        // API path\n        const productInformationComponent = products.productInformation.map(productInformationObject => {\n            return (\n                // ... = spread operator, it deconstructs the object in this case product information object, split up the each of the fields and pass them as a props in the product information\n                <ProductInformation {...productInformationObject} />\n            )\n        })\n    \n      // how it will show in the DOM\n      return (  \n        <ul className=\"carousel__list\">{productInformationComponent}</ul>\n      ); \n  }\n}\n  \n  export default Products;\n  ","import React, { Component } from 'react';\nimport Products from './Products';\nimport './Products.css'; \n\nclass ProductList extends Component {\n  render() {\n    return (\n      <div className=\"carousel__view\">\n          <Products/>\n      </div>\n    );\n  }\n}\n\nexport default ProductList;","import ProductList from '../components/ProductList';\n\nfunction MainPage() {\n    return (\n      <div className=\"App\"> \n        <ProductList />\n      </div>\n    );\n  \n}\n\nexport default MainPage;\n","import { Component } from \"react\";\nimport \"./Cart.css\";\n\n// The single poduct row\nfunction ShopRow(props) {\n  return (\n    <tr className=\"listItem\">\n      <td>\n        <span className=\"listItem-name\">{props.name}</span>\n      </td>\n      <td>\n        <input\n          className=\"listItem-count\"\n          type=\"number\"\n          value={props.count}\n          onChange={props.handleCountChange}\n        />\n      </td>\n      <td className=\"listItem-price\">\n        {props.price}\n      </td>\n      <td className=\"listItem-totalPrice\">\n        {props.totalPrice}\n      </td>\n      <td>\n        <input\n          className=\"checkBox\"\n          type=\"checkbox\"\n          checked={props.isChecked}\n          onChange={props.handleCheck}\n        />\n      </td>\n    </tr>\n  );\n}\n\n\n// Show the total price.\nfunction TotalBlock(props) {\n  return (\n    <div className=\"totalBlock\">\n      <span>Total: </span>\n      <span>{props.totalPrice}</span>\n    </div>\n  );\n}\n\n\n// The information of products\nconst cartList = [\n  {\n    name: 'IPhone',\n    price: 1200,\n    count: 1,\n    totalPrice: 1200,\n    isChecked: false\n  },\n  {\n    name: 'Galaxy',\n    price: 900,\n    count: 1,\n    totalPrice: 900,\n    isChecked: false\n  }\n];\n\n\n// Main class\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartList: cartList,\n      isCheckedAll: false,\n      totalPrice: 0\n    };\n\n    console.log('cartList: ', this.state.cartList);\n  }\n\n  // Calculate the total price\n  handleTotalPrice = () => {\n    let totalPrice = 0;\n    this.state.cartList.forEach((item) => {\n      if (item.isChecked) {\n        totalPrice += item.count * item.price;\n      }\n    });\n    console.log('totalPrice', totalPrice);\n    return totalPrice;\n  }\n\n  // Select all\n  handleCheckAll = () => {\n    this.setState({\n      isCheckedAll: !this.state.isCheckedAll\n    });\n    this.state.cartList.map((item) => {\n      item.isChecked = !this.state.isCheckedAll\n    });\n    this.setState({\n      totalPrice: this.handleTotalPrice()\n    });\n    console.log('cartList: ', this.state.cartList);\n  }\n\n  // Select a single product\n  handleCheck = (event, index) => {\n    this.state.cartList[index].isChecked = event.target.checked;\n    this.setState({\n      cartList: this.state.cartList\n    });\n    let checkedCache = new Array(0);\n    this.state.cartList.forEach((item) => {\n      checkedCache.push(item.isChecked);\n    });\n    console.log('checkedCache: ', checkedCache);\n    this.setState({\n      isCheckedAll: checkedCache.every(isChecked => isChecked)\n    },\n    () => {\n      console.log(\"isCheckAll: \", this.state.isCheckedAll);\n    });\n    this.setState({\n      totalPrice: this.handleTotalPrice()\n    });\n  }\n\n  // Quantity\n  handleCountChange = (event, index) => {\n    this.state.cartList[index].count = event.target.value;\n    this.state.cartList[index].totalPrice = event.target.value * this.state.cartList[index].price;\n    this.setState({\n      cartList: this.state.cartList\n    });\n    this.state.totalPrice = this.handleTotalPrice();\n    this.setState({\n      totalPrice: this.state.totalPrice\n    });\n  }\n\n  // Whether selected. If not, cannot buy or remove\n  handleHaveCheck = () => {\n    let haveChecked = new Array(0);\n    this.state.cartList.forEach((item) => {\n      haveChecked.push(item.isChecked);\n    });\n    return haveChecked.some(item => item === true);\n  }\n\n  // Remove\n  handleRemove = () => {\n    if (this.handleHaveCheck()) {\n      this.state.cartList.forEach((item) => {\n        if (item.isChecked) {\n          this.state.cartList = this.state.cartList.filter((ele) => ele !== item);\n        }\n      });\n      this.setState({\n        cartList: this.state.cartList,\n        totalPrice: this.handleTotalPrice()\n      });\n    } else {\n      alert('No seleted!');\n    }\n  }\n\n  //Checkout\n  handleBuy = () => {\n    if (this.handleHaveCheck()) {\n      alert('Thank you for your purchase!');\n    } else {\n      alert('No seleted!');\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"cart-container\" className=\"container\">\n        <table className=\"cart-table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Quantity</th>\n              <th>Price</th>\n              <th>Total</th>\n              <th>\n                Select all\n                <input\n                  className=\"selectAll\"\n                  type=\"checkbox\"\n                  checked={this.state.isCheckedAll}\n                  onChange={this.handleCheckAll}\n                />\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.cartList.map((item, index) => {\n                return (\n                  <ShopRow\n                    key={index}\n                    name={item.name}\n                    price={item.price}\n                    count={item.count}\n                    totalPrice={item.totalPrice}\n                    isChecked={item.isChecked}\n                    handleCheck={(e) => {this.handleCheck(e, index);}}\n                    handleCountChange={(e) => {this.handleCountChange(e, index)}}\n                  />\n                )\n              })\n            }\n          </tbody>\n        </table>\n        <TotalBlock totalPrice={this.state.totalPrice} />\n        <button\n          id=\"shopCar-buyBtn\"\n          className=\"primary-btn\"\n          onClick={this.handleBuy}>Checkout</button>\n        <button\n          id=\"shopCar-removeBtn\"\n          className=\"remove-btn\"\n          onClick={this.handleRemove}>Remove</button>\n      </div>\n    );\n  }\n}\n\nexport default Cart;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Cart.css';\n\nclass Cart extends Component {\n  render() {\n    return (\n      <ul className=\"cart-items\">\n        <Link to='/Cart'>My Cart</Link>\n      </ul>\n    );\n  }\n}\n\nexport default Cart;","export default class ApiUtil {\n    static URL_IP = 'http://127.0.0.1:5000/';\n    static URL_ROOT = '/api/v1'\n\n    // Please write your function address here\n    static API_SEARCH = ApiUtil.URL_ROOT + '/searchBar';\n    static API_REGISTER = ApiUtil.URL_ROOT + '/register';\n    static API_CHECKMAILBOX = ApiUtil.URL_ROOT + '/findUserByMailbox';\n    static API_LOGIN = ApiUtil.URL_ROOT + '/login';\n}","export default class HttpUtil{\n    // post function\n    static post(url, data){\n        return new Promise((resolve,reject)=>{\n            fetch(url,{ \n                method: 'POST',\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n                .then(response=>response.json())\n                .then(result=>resolve(result))\n                .catch(error=>{\n                    reject(error);\n                })\n        })\n    }\n}","import { Component, React, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ApiUtil from '../Utils/ApiUtil';\nimport HttpUtil from '../Utils/HttpUtil';\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        var searchResult;\n        this.state = {inputValue: 'type a search key', searchValue: ''};\n        this.inputChange = this.inputChange.bind(this);\n        this.search = this.search.bind(this);\n    }\n\n    inputChange(event) {\n        this.setState({inputValue: event.target.value});\n    }\n\n    // when the user press Enter.\n    keyPress = (e) => {\n        if (e.nativeEvent.keyCode === 13) {this.search(e);}\n    }\n\n    search(event) {\n        // use the post to send (url, data) to flask\n        HttpUtil.post(ApiUtil.API_SEARCH, event.target.value)\n            // when the results return\n            .then(\n                res=> this.setState({searchValue: res.message})\n            )\n        this.searchResult = this.state.searchValue\n    }\n\n    render() {\n        return (\n            <div>\n                <input type=\"text\" value={this.state.inputValue} onChange={this.inputChange} onKeyPress={this.keyPress}/>\n                <Link to='/Search'>\n                    <button value={this.state.inputValue} onClick={this.search}>Search!</button>\n                </Link>\n                <h4>{this.state.searchValue}</h4>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import \"./Login.css\";\nimport {useState, useEffect} from \"react\";\nimport ApiUtil from '../Utils/ApiUtil';\nimport HttpUtil from '../Utils/HttpUtil';\n\n\nexport default function TheAccount() {\n    const [showLoginSign, setShowLoginSign] = useState(false);\n    const [showLogin, setShowLogin] = useState(false);\n    const [showSign, setShowSign] = useState(false);\n    const [isLogin, setIsLogin] = useState(false);\n\n    useEffect(() => {\n        let mailBox = window.localStorage.getItem(\"mailBox\")\n        if (mailBox) {\n            setIsLogin(true)\n        }\n    })\n\n    function handleShowLogin() {\n        setShowLogin(true);\n        setShowSign(false);\n    }\n\n    function handleShowSign() {\n        setShowLogin(false);\n        setShowSign(true);\n    }\n\n    function handleLogout() {\n        window.localStorage.clear();\n        setIsLogin(false);\n    }\n\n    function closeModal() {\n        setShowLogin(false);\n        setShowSign(false);\n    }\n\n    return (\n        <>\n            <div className=\"the-account\">\n          <span onClick={() => setShowLoginSign(!showLoginSign)}>\n            {isLogin ? window.localStorage.getItem(\"mailBox\") : \"My Account\"}\n          </span>\n            </div>\n            {showLoginSign && (\n                isLogin ?\n                    <ul className=\"login-sign\" onClick={() => setShowLoginSign(false)}>\n                        <li onClick={() => handleLogout()}>Logout</li>\n                    </ul> :\n                    <ul className=\"login-sign\" onClick={() => setShowLoginSign(false)}>\n                        <li onClick={() => handleShowLogin()}>Login</li>\n                        <li onClick={() => handleShowSign()}>Sign Up</li>\n                    </ul>\n            )}\n\n            {showLogin && <Login/>}\n            {showSign && <Sign/>}\n        </>\n    );\n\n    function Login() {\n        const [mailBoxPrompt, setMailBoxPrompt] = useState(\"\")\n        const [passwordPrompt, setPasswordPrompt] = useState(\"\")\n        const [mailBox, setMailbox] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n\n        function handlePasswordBlur(e) {\n            const passwordPattern = /([0-9]+)\\S*([a-zA-Z]+)|([a-zA-Z]+)\\S*([0-9]+)/ // password re pattern\n\n            if (e.target.value.length < 8 || e.target.value.length > 16) {\n                setPasswordPrompt(\"Password length should be in the range 8-16\");\n            } else if (e.target.value.search(passwordPattern) === -1) {\n                setPasswordPrompt(\"Password should contain alphabet and number\")\n            } else {\n                setPasswordPrompt(\"\");\n                setPassword(e.target.value);\n            }\n        }\n\n        function handleMailBoxBlur(e) {\n            const mailBoxPattern = /^\\w+@([a-zA-Z]+\\.)+[a-zA-Z]+$/\n            if (e.target.value.search(mailBoxPattern) === -1) { // illegal mailBox\n                setMailBoxPrompt(\"The mailbox is wrong!\");\n            } else {\n                setMailBoxPrompt(\"\");\n                setMailbox(e.target.value);\n            }\n        }\n\n\n        async function handleLoginIn() {\n            if (mailBox && password) {\n                await HttpUtil.post(ApiUtil.API_LOGIN, {'mailBox': mailBox, 'password': password})\n                    .then(response => {\n                        if (response === 1) {\n                            alert('Login successful!')\n                            // window.localStorage.setItem(\"username\", username);\n                            window.localStorage.setItem(\"mailBox\", mailBox);\n                            closeModal();\n                        } else if (response === 0) {\n                            alert('Invalid password')\n                        } else {\n                            alert('User not exist,please register!')\n                        }\n                    })\n            }\n\n        }\n\n        return (\n            <ul className=\"container\">\n                <li onClick={closeModal}>\n                    <button\n                        type=\"button\"\n                        className=\"close\"\n                        data-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                        onClick={() => closeModal()}\n                    ><span aria-hidden=\"false\">&times;</span>\n                    </button>\n                </li>\n                <h3 align=\"center\"> Login </h3>\n                <li>\n                    <label htmlFor=\"mailBox\">MailBox: </label>\n                    <input\n                        type=\"text\"\n                        id=\"mailBox\"\n                        onBlur={(e) => handleMailBoxBlur(e)}\n                    />\n                    <p className=\"prompt mailBox\">{mailBoxPrompt}</p>\n                </li>\n                <li>\n                    <label htmlFor=\"password\">Password: </label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        onBlur={(e) => handlePasswordBlur(e)}\n                    />\n                    <p className=\"prompt password\">{passwordPrompt}</p>\n                </li>\n                <li>\n                    <button onClick={() => handleLoginIn()}>Login</button>\n                </li>\n            </ul>\n        );\n    }\n\n    function Sign() {\n        const [repeatPassword, setRepeatPassword] = useState(\"\");\n        const [username, setUsername] = useState(\"\");\n        const [firstname, setFirstname] = useState(\"\");\n        const [lastname, setLastname] = useState(\"\");\n        const [usernamePrompt, setUsernamePrompt] = useState(\"\")\n        const [firstnamePrompt, setFirstnamePrompt] = useState(\"\")\n        const [lastnamePrompt, setLastnamePrompt] = useState(\"\")\n        const [repeatPasswordPrompt, setRepeatPasswordPrompt] = useState(\"\")\n        const [mailBoxPrompt, setMailBoxPrompt] = useState(\"\")\n        const [passwordPrompt, setPasswordPrompt] = useState(\"\")\n        const [mailBox, setMailbox] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n\n        function handleUsernameBlur(e) {\n            if (e.target.value.length < 4 || e.target.value.length > 10) {\n                setUsernamePrompt(\"Username length should be in the range 4-10\");\n            } else {\n                setUsernamePrompt(\"\");\n                setUsername(e.target.value);\n            }\n        }\n\n        function handleFirstnameBlur(e) {\n            if (e.target.value.length < 4 || e.target.value.length > 10) {\n                setFirstnamePrompt(\"Firstname length should be in the range 4-10\");\n            } else {\n                setFirstnamePrompt(\"\");\n                setFirstname(e.target.value);\n            }\n        }\n\n        function handleLastnameBlur(e) {\n            if (e.target.value.length < 4 || e.target.value.length > 10) {\n                setLastnamePrompt(\"Lastname length should be in the range 4-10\");\n            } else {\n                setLastnamePrompt(\"\");\n                setLastname(e.target.value);\n            }\n        }\n\n        function handlePasswordBlur(e) {\n            const passwordPattern = /([0-9]+)\\S*([a-zA-Z]+)|([a-zA-Z]+)\\S*([0-9]+)/ // password re pattern\n\n            if (e.target.value.length < 8 || e.target.value.length > 16) {\n                setPasswordPrompt(\"Password length should be in the range 8-16\");\n            } else if (e.target.value.search(passwordPattern) === -1) {\n                setPasswordPrompt(\"Password should contain alphabet and number\")\n            } else {\n                setPasswordPrompt(\"\");\n                setPassword(e.target.value);\n            }\n        }\n\n        function handleMailBoxBlur(e) {\n            const mailBoxPattern = /^\\w+@([a-zA-Z0-9]+\\.)+[a-zA-Z0-9]+$/\n            if (e.target.value.search(mailBoxPattern) === -1) { // illegal mailBox\n                setMailBoxPrompt(\"The mailbox is wrong!\");\n            } else {\n                setMailBoxPrompt(\"\");\n                setMailbox(e.target.value);\n            }\n        }\n\n        function handleRepeatPasswordBlur(e) {\n            if (password !== e.target.value) {\n                setRepeatPasswordPrompt(\"The 2 password not matched!\");\n            } else {\n                setRepeatPasswordPrompt(\"\")\n                setRepeatPassword(e.target.value);\n            }\n        }\n\n\n        async function handleSign() {\n            if (username && firstname && lastname && password && repeatPassword && mailBox && password === repeatPassword) {\n                let flag\n                await HttpUtil.post(ApiUtil.API_CHECKMAILBOX, {'mailBox': mailBox}) // check mailbox\n                    .then(value => {\n                        flag = value\n                    })\n                if (flag === 1) {\n                    alert(\"The mailbox is used!\")\n                    return;\n                }\n                await HttpUtil.post('asfdasdfasf' + ApiUtil.API_REGISTER, {\n                    \"username\": username,\n                    \"firstname\": firstname,\n                    \"lastname\": lastname,\n                    \"password\": password,\n                    \"mailBox\": mailBox\n                })\n                    .then(response => {\n                        if (response === 1) {\n                            alert('You just registered successfully!')\n                            closeModal()\n                            setShowLogin(true)\n                        }\n                    })\n\n            } else {\n                alert(\"Please check the information!Try it again!\")\n            }\n        }\n\n        return (\n            <ul className=\"container\">\n                <li onClick={closeModal}>\n                    <button\n                        type=\"button\"\n                        className=\"close\"\n                        data-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                        onClick={() => closeModal()}\n                    ><span aria-hidden=\"false\">&times;</span>\n                    </button>\n                </li>\n                <h3 align=\"center\"> Sign Up </h3>\n                <li>\n                    <label htmlFor=\"username\">Username: </label>\n                    <input required type=\"text\" id=\"username\" onBlur={(e) => handleUsernameBlur(e)}/>\n                    <p className=\"prompt username\">{usernamePrompt}</p>\n                </li>\n                <li>\n                    <label htmlFor=\"firstname\">Firstname: </label>\n                    <input required type=\"text\" id=\"firstname\" onBlur={(e) => handleFirstnameBlur(e)}/>\n                    <p className=\"prompt firstname\">{firstnamePrompt}</p>\n                </li>\n                <li>\n                    <label htmlFor=\"lastname\">Lastname: </label>\n                    <input required type=\"text\" id=\"lastname\" onBlur={(e) => handleLastnameBlur(e)}/>\n                    <p className=\"prompt lastname\">{lastnamePrompt}</p>\n                </li>\n                <li>\n                    <label htmlFor=\"password\">Password: </label>\n                    <input required type=\"password\" id=\"password\" onBlur={(e) => handlePasswordBlur(e)}/>\n                    <p className=\"prompt password\">{passwordPrompt}</p>\n                </li>\n                <li>\n                    <label htmlFor=\"repeat-password\">Repeat Password: </label>\n                    <input required type=\"password\" id=\"repeat-password\" onBlur={(e) => handleRepeatPasswordBlur(e)}/>\n                    <p className=\"prompt repeat-password\">{repeatPasswordPrompt}</p>\n                </li>\n                <li>\n                    <label htmlFor=\"mailBox\">MailBox: </label>\n                    <input required type=\"text\" id=\"mailBox\" onBlur={(e) => handleMailBoxBlur(e)}/>\n                    <p className=\"prompt mailBox\">{mailBoxPrompt}</p>\n                </li>\n                <li>\n                    <button onClick={() => handleSign()}>Register</button>\n                </li>\n            </ul>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Cart from './Cart';\nimport './Header.css';\nimport SearchBar from './Search';\nimport TheAccount from './TheAccount.js';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header id=\"header\" role=\"banner\">\n          <table className=\"header-tbl\" role=\"presentation\">\n              <tbody> \n                  <tr>\n                  <td>\n                  <h1>\n                    <Link to='/'>\n                      <img class=\"logo__image\" src={\"img/chip-spree-logo.JPG\"} alt=\"Image\" />\n                    </Link>\n                  </h1>      \n                  </td>\n                  <td class=\"search__bar\"><SearchBar/></td>\n                  <td class=\"cart\"><Cart /></td>\n                  <td class=\"account\"><TheAccount /></td>\n                  </tr>\n                </tbody>\n            </table>\n          <div></div>                \n      </header>\n    );\n  }\n}\n\nexport default Header;","import SearchBar from '../components/Search';\n\nfunction Search() {\n    return (\n        <div className=\"App\">\n            it does not work.\n            <h4>{SearchBar.searchResult}</h4>\n        </div>\n    );\n}\n\nexport default Search;","import { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './Checkout.css';\n\nfunction CheckoutForm() {\n    const [state, setMyState] = useState(\"Massachusetts\");\n    const [inputs, setInputs] = useState({});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setMyState(event.target.value)\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n            setValidated(true);\n            //alert(\"Thank you for submitting your order! You will receive a confirmation email shortly.\");\n        }\n\n    };\n\n\n    return (\n        <div className=\"checkoutForm\">\n            <form onSubmit={handleSubmit}>\n                <h1>Order Summary </h1>\n\n                <h1>Shipping Address</h1>\n                <br></br>\n\n                <label>Name:\n                    <input\n                        type=\"text\"\n                        required={true}\n                        name=\"nameShipping\"\n                        placeholder=\"Enter name\"\n                        value={inputs.nameShipping || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>Address Line 1:\n                    <input\n                        type=\"text\"\n                        required={true}\n                        name=\"address1\"\n                        placeholder=\"Address Line 1\"\n                        value={inputs.address1 || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>Address Line 2:\n                    <input\n                        type=\"text\"\n                        name=\"address2\"\n                        placeholder=\"Address Line 2\"\n                        value={inputs.address2 || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>City:\n                    <input\n                        type=\"text\"\n                        required={true}\n                        name=\"city\"\n                        placeholder=\"Enter city\"\n                        value={inputs.city || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>State:\n                    <select value={state} onChange={handleChange}>\n                        <option value=\"Alabama\">AL</option>\n                        <option value=\"Alaska\">AK</option>\n                        <option value=\"American Samoa\">AS</option>\n                        <option value=\"Arizona\">AZ</option>\n                        <option value=\"Arkansas\">AR</option>\n                        <option value=\"California\">CA</option>\n                        <option value=\"Colorado\">CO</option>\n                        <option value=\"Connecticut\">CT</option>\n                        <option value=\"Delaware\">DE</option>\n                        <option value=\"District of Columbia\">DC</option>\n                        <option value=\"Florida\">FL</option>\n                        <option value=\"Georgia\">GA</option>\n                        <option value=\"Guam\">GU</option>\n                        <option value=\"Hawaii\">HI</option>\n                        <option value=\"Idaho\">ID</option>\n                        <option value=\"Illinois\">IL</option>\n                        <option value=\"Indiana\">IN</option>\n                        <option value=\"Iowa\">IA</option>\n                        <option value=\"Kansas\">KS</option>\n                        <option value=\"Kentucky\">KY</option>\n                        <option value=\"Louisiana\">LA</option>\n                        <option value=\"Maine\">ME</option>\n                        <option value=\"Maryland\">MD</option>\n                        <option value=\"Massachusetts\">MA</option>\n                        <option value=\"Michigan\">MI</option>\n                        <option value=\"Minnesota\">MN</option>\n                        <option value=\"Mississipi\">MS</option>\n                        <option value=\"Missouri\">MO</option>\n                        <option value=\"Montana\">MT</option>\n                        <option value=\"Nebraska\">NE</option>\n                        <option value=\"Nevada\">NV</option>\n                        <option value=\"New Hampshire\">NH</option>\n                        <option value=\"New Jersey\">NJ</option>\n                        <option value=\"New Mexico\">NM</option>\n                        <option value=\"New York\">NY</option>\n                        <option value=\"North Carolina\">NC</option>\n                        <option value=\"North Dakota\">ND</option>\n                        <option value=\"Northern Mariana Islands\">MP</option>\n                        <option value=\"Ohio\">OH</option>\n                        <option value=\"Oklahoma\">OK</option>\n                        <option value=\"Oregon\">OR</option>\n                        <option value=\"Pennsylvania\">PA</option>\n                        <option value=\"Puerto Rico\">PR</option>\n                        <option value=\"Rhode Island\">RI</option>\n                        <option value=\"South Carolina\">SC</option>\n                        <option value=\"South Dakota\">SD</option>\n                        <option value=\"Tennessee\">TN</option>\n                        <option value=\"Texas\">TX</option>\n                        <option value=\"U.S. Virgin Islands\">VI</option>\n                        <option value=\"Utah\">UT</option>\n                        <option value=\"Vermont\">VT</option>\n                        <option value=\"Virginia\">VA</option>\n                        <option value=\"Washington\">WA</option>\n                        <option value=\"West Virginia\">WV</option>\n                        <option value=\"Wisconsin\">WI</option>\n                        <option value=\"Wyoming\">WY</option>\n                    </select>\n                </label>\n                <label>Zipcode:\n                    <input\n                        type=\"number\"\n                        required={true}\n                        name=\"zip\"\n                        placeholder=\"Zipcode\"\n                        value={inputs.zip || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>Email address:\n                    <input\n                        type=\"email\"\n                        required={true}\n                        name=\"email\"\n                        placeholder=\"Email address\"\n                        value={inputs.email || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <br></br>\n\n                <h1>Payment Information</h1>\n                <label>Name on Card:\n                    <input\n                        type=\"text\"\n                        required={true}\n                        name=\"nameCard\"\n                        placeholder=\"Enter name on credit card\"\n                        value={inputs.nameCard || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>Credit card number:\n                    <input\n                        type=\"number\"\n                        required={true}\n                        minLength={8}\n                        maxLength={19}\n                        name=\"ccNumber\"\n                        placeholder=\"Credit card number\"\n                        value={inputs.ccNumber || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>Expiration month:\n                    <select value={state} onChange={handleChange}>\n                        <option value=\"January\">January</option>\n                        <option value=\"February\">February</option>\n                        <option value=\"March\">March</option>\n                        <option value=\"April\">April</option>\n                        <option value=\"May\">May</option>\n                        <option value=\"June\">June</option>\n                        <option value=\"July\">July</option>\n                        <option value=\"August\">August</option>\n                        <option value=\"September\">September</option>\n                        <option value=\"October\">October</option>\n                        <option value=\"November\">November</option>\n                        <option value=\"December\">Decembe</option>\n                    </select>\n                </label>\n                <label>Expiration year:\n                    <select value={state} onChange={handleChange}>\n                        <option value=\"2021\">2021</option>\n                        <option value=\"2022\">2022</option>\n                        <option value=\"2023\">2023</option>\n                        <option value=\"2024\">2024</option>\n                        <option value=\"2025\">2025</option>\n                    </select>\n                </label>\n                <label>Security code:\n                    <input\n                        type=\"number\"\n                        required={true}\n                        name=\"secCode\"\n                        placeholder=\"Security code\"\n                        value={inputs.secCode || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>Billing zipcode:\n                    <input\n                        type=\"number\"\n                        required={true}\n                        name=\"billingZip\"\n                        placeholder=\"Billing zipcode\"\n                        value={inputs.billingZip || \"\"}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\" id=\"submitBtn\" className=\"submitBtn\" onClick={handleSubmit}> SUBMIT</button>\n            </form>\n        </div>\n    )\n}\n\n//ReactDOM.render(<CheckoutForm />, document.getElementById('root'));\nexport default CheckoutForm;","import React, { useState, useEffect, Component} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css'\nimport MainPage from './pages/MainPage';\nimport Cart from './pages/Cart';\nimport Header from './components/Header';\nimport Search from './pages/Search';\nimport CheckoutForm from './pages/Checkout';\n\nfunction App() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Header />\n          <Switch>\n            <Route path='/' exact>\n              <MainPage />\n            </Route>\n            <Route path='/cart'>\n              <Cart />\n            </Route>\n            <Route path='/Search'>\n              <Search />\n            </Route>\n            <Route path=\"/checkout\">\n              <CheckoutForm />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}